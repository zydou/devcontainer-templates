name: "CI - Test Templates"
on:
  push:
    branches:
      - main
    paths:
      - src/**
      - test/**
  pull_request:
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      templates: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@main
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            hugo: ./**/hugo/**
            latex: ./**/latex/**

  test:
    needs: detect-changes
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        templates: ${{ fromJSON(needs.detect-changes.outputs.templates) }}
    steps:
      - uses: actions/checkout@main

      - name: Smoke test for '${{ matrix.templates }}'
        id: smoke_test
        uses: ./.github/actions/smoke-test
        with:
          template: "${{ matrix.templates }}"

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: push image
        if: github.event_name != 'pull_request'
        id: push_image
        shell: bash
        run: |
          docker tag ${{ matrix.templates }} ${{ github.repository_owner }}/devcontainer-images:${{ matrix.templates }}
          docker tag ${{ matrix.templates }} ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ matrix.templates }}
          docker push ${{ github.repository_owner }}/devcontainer-images:${{ matrix.templates }}
          docker push ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ matrix.templates }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/devcontainer-images
          short-description: "Dev Container images built with templates"
          readme-filepath: README.md
      - name: Delete untagged
        uses: dylanratcliffe/delete-untagged-containers@main
        with:
          package_name: devcontainer-images
          token: ${{ secrets.PAT }}
          user: ${{ github.repository_owner }}

