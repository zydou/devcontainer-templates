name: "Build latex versions"
env:
  NAME: latex
on:
  push:
    paths:
      - src/latex/**
      - .github/workflows/latex.yaml
  workflow_dispatch:

jobs:
  build-latest:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        version: ["latest"]
        scheme: ["minimal", "basic", "small", "medium", "full"]
        extra: ["none", "doc", "src", "doc-src"]
    name: Build ${{ matrix.version }}-${{ matrix.scheme }} (Extra ${{ matrix.extra }})
    steps:
      - uses: actions/checkout@main

      - name: Generate devcontainer-template.json (without extra)
        if: ${{ matrix.extra == 'none' }}
        shell: bash
        run: |
          cp -v -r src/${{ env.NAME }} /tmp/
          cp -v .github/actions/utils/* /tmp/${{ env.NAME }}/
          cd /tmp/${{ env.NAME }}
          python generate-template.py ${{ matrix.version }} ${{ matrix.scheme }}
          echo "Content of devcontainer-template.json"
          cat devcontainer-template.json
          bash apply-template.sh
          echo "Content of devcontainer.json"
          cat .devcontainer/devcontainer.json
      - name: Generate devcontainer-template.json (with extra)
        if: ${{ matrix.extra != 'none' }}
        shell: bash
        run: |
          cp -v -r src/${{ env.NAME }} /tmp/
          cp -v .github/actions/utils/* /tmp/${{ env.NAME }}/
          cd /tmp/${{ env.NAME }}
          python generate-template.py ${{ matrix.version }} ${{ matrix.scheme }}-${{ matrix.extra }}

          echo "Content of devcontainer-template.json"
          cat devcontainer-template.json
          bash apply-template.sh
          echo "Content of devcontainer.json"
          cat .devcontainer/devcontainer.json
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Build and push extended
        if: ${{ matrix.extra != 'none' }}
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder .
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}

      - name: Build and push
        if: ${{ matrix.extra == 'none' }}
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder .
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
  build-historic:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        version: ["TL2021", "TL2020", "TL2019", "TL2018"]
        scheme: ["historic"]
        extra: ["none", "doc", "src", "doc-src"]
    name: Build ${{ matrix.version }}-${{ matrix.scheme }} (Extra ${{ matrix.extra }})
    steps:
      - uses: actions/checkout@main

      - name: Generate devcontainer-template.json (without extra)
        if: ${{ matrix.extra == 'none' }}
        shell: bash
        run: |
          cp -v -r src/${{ env.NAME }} /tmp/
          cp -v .github/actions/utils/* /tmp/${{ env.NAME }}/
          cd /tmp/${{ env.NAME }}
          python generate-template.py ${{ matrix.version }} ${{ matrix.scheme }}
          echo "Content of devcontainer-template.json"
          cat devcontainer-template.json
          bash apply-template.sh
          echo "Content of devcontainer.json"
          cat .devcontainer/devcontainer.json
      - name: Generate devcontainer-template.json (with extra)
        if: ${{ matrix.extra != 'none' }}
        shell: bash
        run: |
          cp -v -r src/${{ env.NAME }} /tmp/
          cp -v .github/actions/utils/* /tmp/${{ env.NAME }}/
          cd /tmp/${{ env.NAME }}
          python generate-template.py ${{ matrix.version }} ${{ matrix.scheme }}-${{ matrix.extra }}

          echo "Content of devcontainer-template.json"
          cat devcontainer-template.json
          bash apply-template.sh
          echo "Content of devcontainer.json"
          cat .devcontainer/devcontainer.json
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Build and push extended
        if: ${{ matrix.extra != 'none' }}
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder .
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}-${{ matrix.extra}}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}

      - name: Build and push
        if: ${{ matrix.extra == 'none' }}
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder .
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-images:${{ env.NAME }}-${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.version }}-${{ matrix.scheme }}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-images
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}

  finishing:
    needs: [build-latest, build-historic]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Delete untagged
        uses: dylanratcliffe/delete-untagged-containers@main
        with:
          package_name: devcontainer-${{ env.NAME }}
          token: ${{ secrets.PAT }}
          user: ${{ github.repository_owner }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          short-description: "Dev Container latex built with templates"
          readme-filepath: src/${{ env.NAME }}/README.md
