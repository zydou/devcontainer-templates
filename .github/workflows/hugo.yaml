name: "Build hugo versions"
env:
  NAME: hugo
on:
  push:
    paths:
      - src/hugo/**
      - .github/workflows/hugo.yaml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        hugoVersion: ["latest", "0.108.0", "0.107.0"]
        arch: ["amd64", "arm64"]

    name: Build ${{ matrix.hugoVersion }} (${{ matrix.arch }})
    steps:
      - uses: actions/checkout@main

      - name: Generate devcontainer-template.json
        shell: bash
        run: |
          cp -v -r src/${{ env.NAME }} /tmp/
          cp -v .github/actions/utils/* /tmp/${{ env.NAME }}/
          cd /tmp/${{ env.NAME }}
          python generate-template.py ${{ matrix.hugoVersion }}
          echo "Content of devcontainer-template.json"
          cat devcontainer-template.json
          bash apply-template.sh
          echo "Content of devcontainer.json"
          cat .devcontainer/devcontainer.json
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Login to GitHub Container Registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@master
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      # Currently, this is a bug of devcontainer-cli to build multi-arch images with `features` enabled
      # So we use a different tag for different arch as a temporary solution.
      # See: https://github.com/devcontainers/ci/issues/191
      - name: Build and push (amd64)
        if: ${{ matrix.arch == 'amd64' }}  # default arch
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder . --platform linux/${{ matrix.arch }}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.hugoVersion }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.hugoVersion }}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}

      - name: Build and push (${{ matrix.arch }})
        if: ${{ matrix.arch != 'amd64' }}  # other arch
        env:
          DOCKER_BUILDKIT: 1
        run: |
          npm install -g @devcontainers/cli
          cd /tmp/${{ env.NAME }}
          devcontainer build --image-name ${{ env.NAME }} --workspace-folder . --platform linux/${{ matrix.arch }}
          docker tag ${{ env.NAME }} ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.hugoVersion }}-${{ matrix.arch }}
          docker tag ${{ env.NAME }} ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}:${{ matrix.hugoVersion }}-${{ matrix.arch }}
          docker push --all-tags ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          docker push --all-tags ghcr.io/${{ github.repository_owner }}/devcontainer-${{ env.NAME }}

  finishing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@main
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/devcontainer-${{ env.NAME }}
          short-description: "Dev Container hugo built with templates"
          readme-filepath: src/${{ env.NAME }}/README.md
